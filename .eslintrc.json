{
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": 6,
    "jsx": true,
    "useJSXTextNode": true
  },
  "plugins": ["react", "@typescript-eslint"],
  "extends": [
    "airbnb",
    "airbnb/hooks",
    "eslint:recommended",
    "plugin:react/recommended",
    "plugin:@typescript-eslint/recommended"
  ],
  "env": {
    "browser": true,
    "jest": true
  },
  "rules": {
    "react/state-in-constructor": "off",
    "react/jsx-filename-extension": [
      1,
      {
        "extensions": [".js", ".jsx", ".tsx"]
      }
    ],

    //
    // our plugin :D
    //

    "@typescript-eslint/consistent-type-definitions": ["error", "interface"],
    "@typescript-eslint/no-unused-vars": "error",
    "@typescript-eslint/no-var-requires": "error",
    "@typescript-eslint/explicit-function-return-type": "off",
    "@typescript-eslint/no-explicit-any": "off",
    "@typescript-eslint/interface-name-prefix": "off",
    "@typescript-eslint/no-non-null-assertion": "off",
    "@typescript-eslint/no-use-before-define": "off",
    "@typescript-eslint/unbound-method": "off",
    //
    // eslint base
    //

    "comma-dangle": ["error", "always-multiline"],
    "curly": ["error", "all"],
    "no-mixed-operators": "error",
    "no-console": "warn",
    // "no-console": "error",
    "no-process-exit": "error",
    //
    //
    // eslint-plugin-import
    //
    // disallow non-import statements appearing before import statements
    "import/first": "error",
    "import/order": "off",
    // Require a newline after the last import/require in a group
    "import/newline-after-import": "error",
    // disallow AMD require/define
    "import/no-amd": "error",
    // Forbid the use of extraneous packages
    "import/no-extraneous-dependencies": [
      "error",
      {
        "devDependencies": true,
        "peerDependencies": true,
        "optionalDependencies": false
      }
    ],
    // Forbid mutable exports
    "import/no-mutable-exports": "error",
    // Prevent importing the default as if it were named
    "import/no-named-default": "error",
    // Prohibit named exports
    "import/no-named-export": "off", // we want everything to be a named export
    // Forbid a module from importing itself
    "import/no-self-import": "error",
    // Require modules with a single export to use a default export
    "import/prefer-default-export": "off" // we want everything to be named
  },
  "settings": {
    "react": {
      "pragma": "React",
      "version": "detect"
    }
  }
}
